# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
   include:
    - feature/*
    - main
  paths:
    exclude:
    - .ado/** # Don't trigger on pipeline config change (for testing)

# Reasoning around placing schedules on the CI/build pipeline:
#  Each time a deployment is scheduled, the latest code from the branch that requires Staging/QA should be referenced
#   to minimize surprises, and ensure consistency during testing activities
schedules:
- cron: '0 0 * * *'
  # mm HH DD MM DW
  displayName: Daily 8 am build
  branches:
    include:
    - main
    - releases/*

- cron: '0 12 * * 0'
  displayName: Weekly Sunday build
  branches:
    include:
    - releases/*
  always: true


pool:
  vmImage: ubuntu-latest

variables:
- name: versionOption
  value: patch
  
steps:
- script: |
    # Your logic for determining major/minor/patch/custom type versions for the artifact goes here.
  displayName: 'Determine version option'

- script: |
    if [[ '${{ variables.Build.SourceBranchName }}' -eq 'main' ]]
    then
      echo ##vso[build.addbuildtag]production
    else
      echo ##vso[build.addbuildtag]preproduction
    fi
  displayName: 'Associate the appropriate tags'

- script: |
    touch demo-artifact.txt
    mv demo-artifact.txt $(Build.ArtifactStagingDirectory)
  displayName: 'Create Artifact'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
        artifactName: 'prod'
    ${{ else }}:
        artifactName: '$(Build.Reason).preprod'
    
# - task: UniversalPackages@0
#   displayName: 'Publish to Artifact Feed'
#   inputs:
#     command: 'publish'
#     publishDirectory: '$(Build.ArtifactStagingDirectory)'
#     feedsToUsePublish: 'internal'
#     vstsFeedPublish: 'c07def7e-1df0-4755-b66e-c8fd781b260d'
#     vstsFeedPackagePublish: 'elevance-test'
#     versionOption: '$(versionOption)'
#     packagePublishDescription: 'sample artifact to trigger deployment pipelines'